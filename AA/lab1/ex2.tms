name: Binary check odd length and 0 in the middle
init: start
accept: Y, H

start,0
odd,0,-

start,1
odd,1,-

odd,0
even,0,>

odd,1
even,1,>

even,0
odd,0,>

even,1
odd,1,>

odd,_
stop,_,<

even,_
delete_right,_,<

//Deletes one at a time left and right symbols to and moves to the end

delete_right,0
check_right,_,<

delete_right,1
check_right,_,<

//checks if 0 is in the middle

check_right,0
check_right_left,0,<

check_right_left,0
move_left,0,>

check_right_left,1
move_left,1,>

check_right_left,_
Y,1,-

check_right,1
move_left,1,<

move_left,0
move_left,0,<

move_left,1
move_left,1,<

move_left,_
delete_left,_,>

delete_left,0
check_left,_,>

delete_left,1
check_left,_,>

//checks if 0 is in the middle

check_left,0
check_left_right,0,>

check_left_right,0
move_right,0,>

check_left_right,1
move_right,1,>

check_left_right,_
Y,1,-

check_left,1
move_left,1,<

check_right,1
move_left,1,<

move_right,1
move_right,1,>

move_right,0
move_right,0,>

move_right,_
delete_right,_,<
